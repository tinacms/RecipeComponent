"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _EVFHZIIBcjs = require('../__chunks/EVFHZIIB.cjs');


var _XHEEGBWUcjs = require('../__chunks/XHEEGBWU.cjs');
require('../__chunks/BBHOBWVO.cjs');
require('../__chunks/UJOJUNIC.cjs');
require('../__chunks/XFOTDXSH.cjs');
require('../__chunks/T3QB4FR3.cjs');




var _MFAH5VLWcjs = require('../__chunks/MFAH5VLW.cjs');


var _TM5Y6AJUcjs = require('../__chunks/TM5Y6AJU.cjs');
require('../__chunks/FDRJDQ5Y.cjs');




var _7EQBAZ46cjs = require('../__chunks/7EQBAZ46.cjs');

// src/form/form-remove.tsx
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var TagName = "button";
function findNextOrPreviousField(items, name, index) {
  const fields = items == null ? void 0 : items.filter(
    (item) => item.type === "field" && item.name.startsWith(name)
  );
  const regex = new RegExp(`^${name}\\.(\\d+)`);
  const nextField = fields == null ? void 0 : fields.find((field) => {
    const fieldIndex = field.name.replace(regex, "$1");
    return Number.parseInt(fieldIndex) > index;
  });
  if (nextField) return nextField;
  return fields == null ? void 0 : fields.reverse().find((field) => {
    const fieldIndex = field.name.replace(regex, "$1");
    return Number.parseInt(fieldIndex) < index;
  });
}
function findPushButton(items, name) {
  return items == null ? void 0 : items.find((item) => item.type === "button" && item.name === name);
}
var useFormRemove = _MFAH5VLWcjs.createHook.call(void 0, 
  function useFormRemove2(_a) {
    var _b = _a, {
      store,
      name: nameProp,
      index,
      autoFocusOnClick = true
    } = _b, props = _7EQBAZ46cjs.__objRest.call(void 0, _b, [
      "store",
      "name",
      "index",
      "autoFocusOnClick"
    ]);
    const context = _EVFHZIIBcjs.useFormContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "FormRemove must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const onClickProp = props.onClick;
    const onClick = _TM5Y6AJUcjs.useEvent.call(void 0, (event) => {
      var _a2;
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented) return;
      if (!store) return;
      store.removeValue(name, index);
      if (!autoFocusOnClick) return;
      const { items } = store.getState();
      const item = findNextOrPreviousField(items, name, index);
      const element = item == null ? void 0 : item.element;
      if (element) {
        element.focus();
        if (_dom.isTextField.call(void 0, element)) {
          element.select();
        }
      } else {
        const pushButton = findPushButton(items, name);
        (_a2 = pushButton == null ? void 0 : pushButton.element) == null ? void 0 : _a2.focus();
      }
    });
    props = _7EQBAZ46cjs.__spreadProps.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, {}, props), {
      onClick
    });
    props = _XHEEGBWUcjs.useButton.call(void 0, props);
    return props;
  }
);
var FormRemove = _MFAH5VLWcjs.forwardRef.call(void 0, function FormRemove2(props) {
  const htmlProps = useFormRemove(props);
  return _MFAH5VLWcjs.createElement.call(void 0, TagName, htmlProps);
});



exports.FormRemove = FormRemove; exports.useFormRemove = useFormRemove;
