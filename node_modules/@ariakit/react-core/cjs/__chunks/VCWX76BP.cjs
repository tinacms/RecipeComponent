"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }

var _BB26STNRcjs = require('./BB26STNR.cjs');


var _P66OGEAYcjs = require('./P66OGEAY.cjs');


var _AY7QMXP6cjs = require('./AY7QMXP6.cjs');



var _Y7UE4JBRcjs = require('./Y7UE4JBR.cjs');


var _TM5Y6AJUcjs = require('./TM5Y6AJU.cjs');



var _7EQBAZ46cjs = require('./7EQBAZ46.cjs');

// src/tab/tab-store.ts
var _tabstore = require('@ariakit/core/tab/tab-store'); var Core = _interopRequireWildcard(_tabstore);
var _react = require('react');
function useTabStoreProps(store, update, props) {
  _TM5Y6AJUcjs.useUpdateEffect.call(void 0, update, [props.composite, props.combobox]);
  store = _AY7QMXP6cjs.useCompositeStoreProps.call(void 0, store, update, props);
  _Y7UE4JBRcjs.useStoreProps.call(void 0, store, props, "selectedId", "setSelectedId");
  _Y7UE4JBRcjs.useStoreProps.call(void 0, store, props, "selectOnMove");
  const [panels, updatePanels] = _Y7UE4JBRcjs.useStore.call(void 0, () => store.panels, {});
  _TM5Y6AJUcjs.useUpdateEffect.call(void 0, updatePanels, [store, updatePanels]);
  return Object.assign(
    _react.useMemo.call(void 0, () => _7EQBAZ46cjs.__spreadProps.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, {}, store), { panels }), [store, panels]),
    { composite: props.composite, combobox: props.combobox }
  );
}
function useTabStore(props = {}) {
  const combobox = _BB26STNRcjs.useComboboxContext.call(void 0, );
  const composite = _P66OGEAYcjs.useSelectContext.call(void 0, ) || combobox;
  props = _7EQBAZ46cjs.__spreadProps.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, {}, props), {
    composite: props.composite !== void 0 ? props.composite : composite,
    combobox: props.combobox !== void 0 ? props.combobox : combobox
  });
  const [store, update] = _Y7UE4JBRcjs.useStore.call(void 0, Core.createTabStore, props);
  return useTabStoreProps(store, update, props);
}




exports.useTabStoreProps = useTabStoreProps; exports.useTabStore = useTabStore;
