"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _4RLNADFKcjs = require('./4RLNADFK.cjs');


var _QMCNFBPOcjs = require('./QMCNFBPO.cjs');



var _5X5VM34Kcjs = require('./5X5VM34K.cjs');




var _MFAH5VLWcjs = require('./MFAH5VLW.cjs');



var _TM5Y6AJUcjs = require('./TM5Y6AJU.cjs');




var _7EQBAZ46cjs = require('./7EQBAZ46.cjs');

// src/popover/popover-disclosure.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var TagName = "button";
var usePopoverDisclosure = _MFAH5VLWcjs.createHook.call(void 0, function usePopoverDisclosure2(_a) {
  var _b = _a, { store } = _b, props = _7EQBAZ46cjs.__objRest.call(void 0, _b, ["store"]);
  const context = _5X5VM34Kcjs.usePopoverProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "PopoverDisclosure must receive a `store` prop or be wrapped in a PopoverProvider component."
  );
  const onClickProp = props.onClick;
  const onClick = _TM5Y6AJUcjs.useEvent.call(void 0, (event) => {
    store == null ? void 0 : store.setAnchorElement(event.currentTarget);
    onClickProp == null ? void 0 : onClickProp(event);
  });
  props = _TM5Y6AJUcjs.useWrapElement.call(void 0, 
    props,
    (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _5X5VM34Kcjs.PopoverScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = _7EQBAZ46cjs.__spreadProps.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, {}, props), {
    onClick
  });
  props = _QMCNFBPOcjs.usePopoverAnchor.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, { store }, props));
  props = _4RLNADFKcjs.useDialogDisclosure.call(void 0, _7EQBAZ46cjs.__spreadValues.call(void 0, { store }, props));
  return props;
});
var PopoverDisclosure = _MFAH5VLWcjs.forwardRef.call(void 0, function PopoverDisclosure2(props) {
  const htmlProps = usePopoverDisclosure(props);
  return _MFAH5VLWcjs.createElement.call(void 0, TagName, htmlProps);
});




exports.usePopoverDisclosure = usePopoverDisclosure; exports.PopoverDisclosure = PopoverDisclosure;
