"use client";
import {
  useComposite
} from "../__chunks/IKLZZMLE.js";
import "../__chunks/5VQZOHHZ.js";
import {
  useToolbarStore
} from "../__chunks/CHKZWOVX.js";
import "../__chunks/OIB4PV4M.js";
import "../__chunks/QZUWIJQN.js";
import {
  ToolbarScopedContextProvider,
  useToolbarProviderContext
} from "../__chunks/LDHO2NSJ.js";
import "../__chunks/APGXEJ2Q.js";
import "../__chunks/G4PVPWEW.js";
import "../__chunks/Z4WWVOIF.js";
import "../__chunks/SWN3JYXT.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/7FZLUSKW.js";
import "../__chunks/CTKPPFRS.js";
import {
  useWrapElement
} from "../__chunks/HNHAUIIY.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/toolbar/toolbar.tsx
import { jsx } from "react/jsx-runtime";
var TagName = "div";
var useToolbar = createHook(
  function useToolbar2(_a) {
    var _b = _a, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = __objRest(_b, [
      "store",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = useToolbarProviderContext();
    storeProp = storeProp || context;
    const store = useToolbarStore({
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => /* @__PURE__ */ jsx(ToolbarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadValues({
      role: "toolbar",
      "aria-orientation": orientation
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var Toolbar = forwardRef(function Toolbar2(props) {
  const htmlProps = useToolbar(props);
  return createElement(TagName, htmlProps);
});
export {
  Toolbar,
  useToolbar
};
