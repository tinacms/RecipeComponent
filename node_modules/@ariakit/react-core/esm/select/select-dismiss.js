"use client";
import {
  usePopoverDismiss
} from "../__chunks/OSVWXUOM.js";
import "../__chunks/CRZAWNHO.js";
import "../__chunks/JOBHIYEN.js";
import {
  useSelectScopedContext
} from "../__chunks/SLHXTMPQ.js";
import "../__chunks/ZHUQ44XA.js";
import "../__chunks/APGXEJ2Q.js";
import "../__chunks/G4PVPWEW.js";
import "../__chunks/COWZSPJ7.js";
import "../__chunks/CMXOY7UW.js";
import "../__chunks/JDEWEW7S.js";
import "../__chunks/Z4WWVOIF.js";
import "../__chunks/SWN3JYXT.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/7FZLUSKW.js";
import "../__chunks/HNHAUIIY.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/select/select-dismiss.tsx
var TagName = "button";
var useSelectDismiss = createHook(
  function useSelectDismiss2(_a) {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useSelectScopedContext();
    store = store || context;
    props = usePopoverDismiss(__spreadValues({ store }, props));
    return props;
  }
);
var SelectDismiss = forwardRef(function SelectDismiss2(props) {
  const htmlProps = useSelectDismiss(props);
  return createElement(TagName, htmlProps);
});
export {
  SelectDismiss,
  useSelectDismiss
};
