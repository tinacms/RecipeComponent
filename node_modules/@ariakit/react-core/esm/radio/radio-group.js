"use client";
import {
  RadioScopedContextProvider,
  useRadioProviderContext
} from "../__chunks/MDCSFLUU.js";
import {
  useComposite
} from "../__chunks/IKLZZMLE.js";
import "../__chunks/5VQZOHHZ.js";
import "../__chunks/APGXEJ2Q.js";
import "../__chunks/G4PVPWEW.js";
import "../__chunks/Z4WWVOIF.js";
import "../__chunks/SWN3JYXT.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/7FZLUSKW.js";
import {
  useWrapElement
} from "../__chunks/HNHAUIIY.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/radio/radio-group.tsx
import { invariant } from "@ariakit/core/utils/misc";
import { jsx } from "react/jsx-runtime";
var TagName = "div";
var useRadioGroup = createHook(
  function useRadioGroup2(_a) {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useRadioProviderContext();
    store = store || context;
    invariant(
      store,
      process.env.NODE_ENV !== "production" && "RadioGroup must receive a `store` prop or be wrapped in a RadioProvider component."
    );
    props = useWrapElement(
      props,
      (element) => /* @__PURE__ */ jsx(RadioScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadValues({
      role: "radiogroup"
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var RadioGroup = forwardRef(function RadioGroup2(props) {
  const htmlProps = useRadioGroup(props);
  return createElement(TagName, htmlProps);
});
export {
  RadioGroup,
  useRadioGroup
};
