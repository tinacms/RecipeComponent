"use client";
import {
  usePopover
} from "../__chunks/DUIQBYXB.js";
import "../__chunks/YLXVVG22.js";
import "../__chunks/RYNM3PZY.js";
import "../__chunks/D7GLA236.js";
import "../__chunks/IGR4SXG2.js";
import "../__chunks/ESSM74HH.js";
import "../__chunks/TBGPDHVR.js";
import "../__chunks/IT6VQU5B.js";
import "../__chunks/7V5QX4SZ.js";
import "../__chunks/HLTQOHKZ.js";
import "../__chunks/677M2CI3.js";
import "../__chunks/6GXEOXGT.js";
import "../__chunks/2PGBN2Y4.js";
import "../__chunks/63XF7ACK.js";
import "../__chunks/AOUGVQZ3.js";
import "../__chunks/K2ZF5NU7.js";
import "../__chunks/SCDU7JWG.js";
import "../__chunks/EGBLFVR2.js";
import "../__chunks/5M6RIVE2.js";
import "../__chunks/OJXDGVKQ.js";
import "../__chunks/ND57YZ3V.js";
import "../__chunks/AOQQTIBO.js";
import "../__chunks/CZ4GFWYL.js";
import "../__chunks/UYRBEP7M.js";
import "../__chunks/5HEBF2AL.js";
import "../__chunks/COWZSPJ7.js";
import "../__chunks/CMXOY7UW.js";
import "../__chunks/JDEWEW7S.js";
import "../__chunks/Z4WWVOIF.js";
import "../__chunks/SWN3JYXT.js";
import "../__chunks/2ATXICAB.js";
import {
  createElement,
  createHook,
  forwardRef
} from "../__chunks/7FZLUSKW.js";
import "../__chunks/B5WJDZ55.js";
import "../__chunks/C76P7QQC.js";
import "../__chunks/CTKPPFRS.js";
import {
  useEvent
} from "../__chunks/HNHAUIIY.js";
import "../__chunks/SK3NAZA3.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "../__chunks/3YLGPPWQ.js";

// src/composite/composite-overflow.tsx
var TagName = "div";
var hiddenStyle = {
  opacity: 0,
  pointerEvents: "none"
};
var useCompositeOverflow = createHook(function useCompositeOverflow2(_a) {
  var _b = _a, {
    store,
    wrapperProps: wrapperPropsProp,
    portal = false
  } = _b, props = __objRest(_b, [
    "store",
    "wrapperProps",
    "portal"
  ]);
  const onFocusProp = props.onFocus;
  const onFocus = useEvent((event) => {
    onFocusProp == null ? void 0 : onFocusProp(event);
    if (event.defaultPrevented) return;
    store.show();
  });
  const mounted = store.useState("mounted");
  const getStyle = (styleProp) => mounted ? styleProp : __spreadValues(__spreadValues({}, hiddenStyle), styleProp);
  const wrapperProps = __spreadProps(__spreadValues({}, wrapperPropsProp), {
    style: getStyle(wrapperPropsProp == null ? void 0 : wrapperPropsProp.style)
  });
  props = __spreadProps(__spreadValues({
    role: "presentation"
  }, props), {
    onFocus
  });
  props = usePopover(__spreadValues({
    store,
    focusable: false,
    alwaysVisible: true,
    wrapperProps,
    portal
  }, props));
  return props;
});
var CompositeOverflow = forwardRef(function CompositeOverflow2(props) {
  const htmlProps = useCompositeOverflow(props);
  return createElement(TagName, htmlProps);
});
export {
  CompositeOverflow,
  useCompositeOverflow
};
